{
  "hash": "7e1ca67d8c4917ac8d06014345e5bc6f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"CDCPLACES 1.1.7: Query ZCTAs\"\nauthor: \"Brenden Smith\"\ndate: \"2024-8-12\"\ncategories: [R, packages, maps, CDCPLACES]\ndescription: \"\"\nengine: knitr\nexecute: \n  warning: false\n  eval: true\n  message: false\ncode-fold: show\ncode-overflow: scroll\ntoc: true\ntitle-block-banner: true\nlightbox: true\neditor_options: \n  chunk_output_type: console\ndraft: true\n---\n\n\n*This is part of the `CDCPLACES` blog series. To view the other posts in this series [click here.](https://brendenmsmith.com/blog#category=CDCPLACES)*\n\n## Introduction\n\nThis brief blog post explains the new additions to `CDCPLACES` 1.1.6. This update provides two new features:\n\n-   The ability to query Zip Code Tabulation Areas (ZCTAs)\n\n-   Improved functionality when querying counties with the same name across different states\n\nIn addition to these features, `CDCPLACES` now depends on `yyjsonr` instead of `jsonlite`. This drastically improves the speed of the package.\n\nTo begin, we will load the required packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"CDCPLACES\")\n\nlibrary(CDCPLACES)\nlibrary(tidyverse)\n```\n:::\n\n\n## Query ZCTAs\n\nA new option has been added to query ZCTAs. To do this, simply set the `geography` argument equal to \"zcta\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw_sleep <- get_places(geography = \"zcta\", \n                      state = \"MI\", \n                      measure = \"SLEEP\",\n                      county = \"Barry\", \n                      geometry = TRUE)\n```\n:::\n\n\nLike other geographies, we can query shapefiles in the same call and easily plot the output:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nw_sleep |> \n  ggplot(aes(fill = data_value, label = locationname)) +\n  geom_sf() +\n  geom_sf_label(fill = \"white\") +\n  theme_void() +\n  scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +\n  labs(title = \"Sleeping less than 7 hours among adults aged >=18 years\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Handle Overlapping Counties\n\nThis update provides the ability to query ZCTAs in different states and counties at the same time. This can raise issues when we want to look at counties that have the same name in multiple states.\n\nConsider the following example. If we were interested in looking at dental health access around the Michigan/Ohio border and the Toledo area, we might query Monroe and Lucas Counties. We would set the query up like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntol <- get_places(geography = \"zcta\",\n                  state = c(\"MI\", \"OH\"),\n                  measure = \"DENTAL\",\n                  county = c(\"LUCAS\", \"MONROE\"),\n                  geometry = TRUE)\n```\n:::\n\n\nThe main issue here is that Ohio also has a Monroe County. `CDCPLACES` will automatically check to see if your returned data contains these overlaps. You will see output in the console that looks like this:\n\n![](screenshots/terminal1.jpg)\n\nThe package will prompt you if you want to include these overlaps. After asking this, it will ask you to specify the counties you wish to exclude from your returned data:\n\n![](screenshots/terminal2.jpg)\n\nIf you choose not to make any exclusions you will get the full data with overlaps. In this example, I excluded Ohio's Monroe County because it is far from the area of interest.[^1]\n\n[^1]: It is crucial to mention that using this function in an R Markdown or Quarto document will override this user input. Full data with overlaps will be returned when knitting/rendering the document. If this is your specific use case, it is recommended to disregard this functionality and filter your data once it is returned.\n\nWe can now plot our returned data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntol |> \n  ggplot(aes(fill = data_value)) +\n  geom_sf() +\n  theme_void() +\n  scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +\n  labs(title = \"Visits to dentist or dental clinic among adults aged >=18 years\")\n```\n:::\n\n\n![](screenshots/tol.png)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}