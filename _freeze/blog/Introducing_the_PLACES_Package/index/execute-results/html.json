{
  "hash": "0c5ecd7b534881ca34a061241d4479fc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducing the CDCPLACES Package\"\nauthor: \"Brenden Smith\"\ndate: \"2024-1-10\"\ncategories: [R, packages, API, vignette, CDCPLACES]\ndescription: \"A brief vignette demonstrating the use of the package `CDCPLACES`.\"\nengine: knitr\nexecute: \n  warning: false\n  eval: true\n# image: \ncode-fold: show\ncode-overflow: scroll\ntoc: true\n---\n\n\n*This is part of the `CDCPLACES` blog series. To view the other posts in this series [click here.](https://brendenmsmith.com/blog#category=CDCPLACES)*\n\n*This post was updated on March 19, 2024 to reflect updates introduced in CDCPLACES 1.1.5.*\n\n## Introduction\n\nTo begin, we can install from CRAN, or from github, then load our packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install from CRAN\n# install.packages(\"CDCPLACES)\n\n# Install from Github\n# devtools::install_github(\"brendensm/CDCPLACES\")\n\nlibrary(CDCPLACES)\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n:::\n\n\n## Function: `get_dictionary`\n\nOur first functions allows us to easily view what measures we can query, via 'measureid', along with a brief definition of each function. If we run `get_dictionary`, a data frame is returned. We can view the measures in a data frame in the R Studio with `View()`. This is the preferred method for exploring the available measures.\n\nFor our example here, I will print the names of the variables in this dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To open a viewer\n# get_dictionary() %>% View()\n\nget_dictionary() %>% names()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"measureid\"                \"measure_full_name\"       \n [3] \"measure_short_name\"       \"categoryid\"              \n [5] \"category_name\"            \"places_release_2024\"     \n [7] \"measurename16_23\"         \"places_release_2023\"     \n [9] \"places_release_2022\"      \"places_release_2021\"     \n[11] \"places_release_2020\"      \"_500_cities_release_2019\"\n[13] \"_500_cities_release_2018\" \"_500_cities_release_2017\"\n[15] \"_500_cities_release_2016\" \"frequency_brfss_year\"    \n[17] \"shortname16_23\"          \n```\n\n\n:::\n:::\n\n\nThis data frame is useful for several reasons. It lists the available measures for each year of the CDC PLACES data, along with the data each variable was collected, all in a single place. Remember to use the `measureid` when querying your data.\n\n## Function: `get_places`\n\nThis function allows us to easily query data that we specify. In the example below, I will get the measure `ACCESS2` (the current lack of health insurance among adults aged 18-64 years) for the state of Arizona. This function allows for multiple of these arguments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naz_access <- get_places(state = \"AZ\", \n                        measure = \"ACCESS2\") \nhead(az_access)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  year stateabbr statedesc locationname datasource   category\n1 2022        AZ   Arizona         Yuma      BRFSS Prevention\n2 2022        AZ   Arizona       La Paz      BRFSS Prevention\n3 2022        AZ   Arizona      Yavapai      BRFSS Prevention\n4 2022        AZ   Arizona      Yavapai      BRFSS Prevention\n5 2022        AZ   Arizona       Graham      BRFSS Prevention\n6 2022        AZ   Arizona       La Paz      BRFSS Prevention\n                                                         measure\n1 Current lack of health insurance among adults aged 18-64 years\n2 Current lack of health insurance among adults aged 18-64 years\n3 Current lack of health insurance among adults aged 18-64 years\n4 Current lack of health insurance among adults aged 18-64 years\n5 Current lack of health insurance among adults aged 18-64 years\n6 Current lack of health insurance among adults aged 18-64 years\n  data_value_unit         data_value_type data_value low_confidence_limit\n1               %        Crude prevalence       15.6                 14.2\n2               %        Crude prevalence        9.2                  8.3\n3               % Age-adjusted prevalence       10.9                  9.8\n4               %        Crude prevalence        6.5                  5.7\n5               % Age-adjusted prevalence       16.2                 14.4\n6               % Age-adjusted prevalence       20.4                 18.5\n  high_confidence_limit totalpopulation totalpop18plus locationid categoryid\n1                  17.1          207842         155973      04027    PREVENT\n2                  10.2           16506          13903      04012    PREVENT\n3                  12.2          246191         208516      04025    PREVENT\n4                   7.2          246191         208516      04025    PREVENT\n5                  18.0           38779          28375      04009    PREVENT\n6                  22.3           16506          13903      04012    PREVENT\n  measureid datavaluetypeid short_question_text\n1   ACCESS2          CrdPrv    Health Insurance\n2   ACCESS2          CrdPrv    Health Insurance\n3   ACCESS2       AgeAdjPrv    Health Insurance\n4   ACCESS2          CrdPrv    Health Insurance\n5   ACCESS2       AgeAdjPrv    Health Insurance\n6   ACCESS2       AgeAdjPrv    Health Insurance\n                                 geolocation\n1 Point, -113.905997385394, 32.7694427722845\n2  Point, -113.98153747073, 33.7292571142703\n3 Point, -112.553640853115, 34.5996977529402\n4 Point, -112.553640853115, 34.5996977529402\n5 Point, -109.887402691851, 32.9327553402921\n6  Point, -113.98153747073, 33.7292571142703\n```\n\n\n:::\n:::\n\n\nIt is also worth noting that by default `geography` specifying geography is set to \"county\". If instead we want to examine census tracts, we could specify the argument. Likewise, `release` is set to \"2023\" by default.\n\nThe argument `county` can be used to filter results to specific counties. This is extremely useful for examining census level data for specific areas of states. Additionally, `geometry` can be added to include a shapefile in the query. For further examples of plotting with shapefiles, see this [dedicated blog post.](https://brendenmsmith.com/posts/shapefiles%20in%20cdcplaces/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncap_counties <- get_places(geography = \"census\",\n                           state = \"MI\",\n                           measure = \"ACCESS2\",\n                           county = c(\"Ingham\", \"Eaton\", \"Clinton\"),\n                           geometry = TRUE)\n```\n:::\n\n\n## Use Case\n\nFrom here, we can start to have fun. It is fairly straight forward to begin exploring data. Here I will first filter out the data so that I can plot the age adjusted rates of lack of health insurance in Arizona.\n\nNotice that the data provide you with confidence limits, so I have chosen to plot them here with error bars.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naz_access %>%\n  filter(datavaluetypeid == \"AgeAdjPrv\") %>%\n  ggplot(aes(data_value, reorder(locationname, data_value))) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(xmin = low_confidence_limit, xmax = high_confidence_limit)) +\n  labs(title = \"Lack of health insurance among adults aged 18-64 years In Arizona Counties\",\n       y = \"\", x = \"Percent\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nYou can also extend this to multiple states to compare. You can easily query two (or more) state names, and plot them. Arizona seems to have a couple of counties that have a much higher rate compared to others.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# multi state comparison\ntwo <- get_places(state = c(\"AZ\", \"NV\"), \n                  measure = \"ACCESS2\")\n\ntwo %>%\n  filter(datavaluetypeid == \"AgeAdjPrv\") %>%\n  ggplot(aes(data_value, reorder(locationname, data_value), color = stateabbr)) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(xmin = low_confidence_limit, xmax = high_confidence_limit)) +\n  labs(title = \n         \"Lack of health insurance among adults aged 18-64 years In Arizona and Nevada\",\n       y = \"Counties\", x = \"Percent\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWe can go even further by comparing more states in the region. Here I have taken the average rate by state to easily compare. Texas appears to be far above the average.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmulti <- get_places(state = c(\"AZ\", \"NV\", \"NM\", \"TX\", \"CA\"), measure = \"ACCESS2\") %>%\n  filter(datavaluetypeid == \"AgeAdjPrv\") %>%\n  summarise(.by = \"stateabbr\", mean_val = mean(data_value), mean_low = mean(low_confidence_limit), mean_high = mean(high_confidence_limit))\n\nmulti %>%\n  ggplot(aes(mean_val, reorder(stateabbr, mean_val), color = stateabbr)) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(xmin = mean_low, xmax = mean_high)) +\n  labs(title = \"Mean lack of health insurance among adults aged 18-64 years In Southwest States\",\n       y = \"\", x = \"Percent\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}