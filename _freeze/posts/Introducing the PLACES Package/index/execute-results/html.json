{
  "hash": "590503c80011da58c3e14defb5699b24",
  "result": {
    "markdown": "---\ntitle: \"Introducing the CDCPLACES Package\"\nauthor: \"Brenden Smith\"\ndate: \"2024-1-10\"\ncategories: [R, packages, API, vignette]\ndescription: \"A brief vignette demonstrating the use of the package `CDCPLACES`.\"\nengine: knitr\nexecute: \n  warning: false\n  eval: true\n# image: \ncode-fold: show\ncode-overflow: scroll\ntoc: true\n---\n\n\n## Introduction\n\nTo begin, we can install the most recent version of `CDCPLACES` from github, then load our packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install from github\n# devtools::install_github(\"brendensm/CDCPLACES\")\n\nlibrary(CDCPLACES)\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n:::\n\n\n## Function: `get_dictionary`\n\nOur first functions allows us to easily view what measures we can query, via 'measureid', along with a brief definition of each function. If we run `get_dictionary`, a data frame is returned. We can view the measures in a data frame in the R Studio with `View()`. This is the preferred method for exploring the available measures.\n\nFor our example here, I will print the names of the variables in this dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To open a viewer\n# get_dictionary() %>% View()\n\nget_dictionary() %>% names()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"measureid\"                \"measure_full_name\"       \n [3] \"measure_short_name\"       \"categoryid\"              \n [5] \"category_name\"            \"places_release_2023\"     \n [7] \"places_release_2022\"      \"places_release_2021\"     \n [9] \"places_release_2020\"      \"_500_cities_release_2019\"\n[11] \"_500_cities_release_2018\" \"_500_cities_release_2017\"\n[13] \"_500_cities_release_2016\" \"frequency_brfss_year\"    \n```\n:::\n:::\n\n\nThis data frame is useful for several reasons. It lists the available measures for each year of the CDC PLACES data, along with the data each variable was collected, all in a single place. Remember to use the `measureid` when querying your data.\n\n## Function: `get_places`\n\nThis function allows us to easily query data that we specify. In the example below, I will get the measure `ACCESS2` (the current lack of health insurance among adults aged 18-64 years) for the state of Arizona. This function allows for multiple of these arguments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naz_access <- get_places(state = \"AZ\", measure = \"ACCESS2\") \nhead(az_access)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n  year  stateabbr statedesc locationname datasource category   measure          \n  <chr> <chr>     <chr>     <chr>        <chr>      <chr>      <chr>            \n1 2021  AZ        Arizona   Yuma         BRFSS      Prevention Current lack of …\n2 2021  AZ        Arizona   Graham       BRFSS      Prevention Current lack of …\n3 2021  AZ        Arizona   Apache       BRFSS      Prevention Current lack of …\n4 2021  AZ        Arizona   La Paz       BRFSS      Prevention Current lack of …\n5 2021  AZ        Arizona   Coconino     BRFSS      Prevention Current lack of …\n6 2021  AZ        Arizona   Cochise      BRFSS      Prevention Current lack of …\n# ℹ 14 more variables: data_value_unit <chr>, data_value_type <chr>,\n#   data_value <dbl>, low_confidence_limit <dbl>, high_confidence_limit <dbl>,\n#   totalpopulation <chr>, locationid <chr>, categoryid <chr>, measureid <chr>,\n#   datavaluetypeid <chr>, short_question_text <chr>, type <chr>, lon <dbl>,\n#   lat <dbl>\n```\n:::\n:::\n\n\nIt is also worth noting that by default `geo` specifying geography is set to `county`. If instead we want to examine census tracts, we could specify the argument. Likewise, release is set to `2023`.\n\n## Use Case\n\nFrom here, we can start to have fun. It is fairly straight forward to begin exploring data. Here I will first filter out the data so that I can plot the age adjusted rates of lack of health insurance in Arizona.\n\nNotice that the data provide you with confidence limits, so I have chosen to plot them here with error bars.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naz_access %>%\n  filter(datavaluetypeid == \"AgeAdjPrv\") %>%\n  ggplot(aes(data_value, reorder(locationname, data_value))) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(xmin = low_confidence_limit, xmax = high_confidence_limit)) +\n  labs(title = \"Lack of health insurance among adults aged 18-64 years In Arizona Counties\",\n       y = \"\", x = \"Percent\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nYou can also extend this to multiple states to compare. You can easily query two (or more) state names, and plot them. Arizona seems to have a couple of counties that have a much higher rate compared to others.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# multi state comparison\ntwo <- get_places(state = c(\"AZ\", \"NV\"), measure = \"ACCESS2\")\n\ntwo %>%\n  filter(datavaluetypeid == \"AgeAdjPrv\") %>%\n  ggplot(aes(data_value, reorder(locationname, data_value), color = stateabbr)) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(xmin = low_confidence_limit, xmax = high_confidence_limit)) +\n  labs(title = \n         \"Lack of health insurance among adults aged 18-64 years In Arizona and Nevada\",\n       y = \"Counties\", x = \"Percent\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nWe can go even further by comparing more states in the region. Here I have taken the average rate by state to easily compare. Texas appears to be far above the average.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmulti <- get_places(state = c(\"AZ\", \"NV\", \"NM\", \"TX\", \"CA\"), measure = \"ACCESS2\") %>%\n  filter(datavaluetypeid == \"AgeAdjPrv\") %>%\n  summarise(.by = \"stateabbr\", mean_val = mean(data_value), mean_low = mean(low_confidence_limit), mean_high = mean(high_confidence_limit))\n\nmulti %>%\n  ggplot(aes(mean_val, reorder(stateabbr, mean_val), color = stateabbr)) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(xmin = mean_low, xmax = mean_high)) +\n  labs(title = \"Mean lack of health insurance among adults aged 18-64 years In Southwest States\",\n       y = \"\", x = \"Percent\") +\n  theme_minimal() +\n  theme(plot.title.position = \"plot\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}